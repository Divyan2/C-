#include <iostream>

class AbstractEmployee{
  virtual void AskForPromotion()=0;
};

class Employee:AbstractEmployee
{
private: 
  std::string Company;
  int Age;
  std::string Name;
public:
void setName(std::string name){
    Name = name;
}
std::string getName(){
    return Name;
}
void setCompany(std::string company){
    Company = company;
}
std::string getCompany(){
    return Company;
}
void setAge(int age){
    Age = age;
}
int getAge(){
    return Age;
}
void intro(){
  std::cout<<Name<<std::endl;
  std::cout<<Company<<std::endl;
  std::cout<<Age<<std::endl;
}
Employee(std::string name,std::string company,int age){
  Name = name;
  Company = company;
  Age = age;
}
void AskForPromotion(){
  if(Age>27){
    std::cout<<Name<<" got promoted"<<std::endl;
  }else{
    std::cout<<Name<<" sorry,no promotion for you"<<std::endl;
  }
}
virtual void work(){
  std::cout<<Name<<" checks emails,perform tasks"<<std::endl;
}
};

class Developer:public Employee{
  public:
    std::string FavProgrammingLanguge;
  Developer(std::string name,std::string company,int age,std::string favprogramminglanguage)
    :Employee(name,company,age)
    {
      FavProgrammingLanguge = favprogramminglanguage;
    }
  void Fixbug(){
    std::cout<<getName()<<" fixed bug using "<<FavProgrammingLanguge<<std::endl;
  }
  void work(){
    std::cout<<getName()<<" writes code"<<std::endl;
}
};

class Teacher:public Employee
{
public:
  std::string Subject;
  Teacher(std::string name,std::string company,int age,std::string subject)
    :Employee(name,company,age)
    {
      Subject = subject;
    }
void PrepareLesson(){
  std::cout<<getName()<<" teaches"<<Subject<<std::endl;
}   
void work(){
  std::cout<<getName()<<" teaches lesson"<<std::endl;
}
};
int main() {
  Developer d = Developer("Divyan","NASA",34,"C++");
  Teacher t = Teacher("gan","isro",43,"History");
  Employee *e1 = &d;
  Employee *e2 = &t;
  e1->work();
  e2->work();
}

